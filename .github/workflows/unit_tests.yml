name: Build, test, deploy

env:
  python.version: 3.8
  python.venv: 'testvenv'

on:
  push:
    branches: [ main ]
    tags:
     - 'v*'
     - v*
  pull_request:
    branches: [ main ]


jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Build and validate source distribution
        run: |
          python setup.py sdist
          pip install twine
          twine check dist/*

      - name: Install source dist
        run: |
          pip install dist/*

    - name: Lint with flake8
      run: |
        # stop the build if there are non-compliance items
        pip install flake8
        flake8 . --count --show-source --max-complexity=22 --max-line-length=100

      - name: Unit testing
        run: |
          pip install -r requirements_test.txt
          pip install pytest-azurepipelines
          cd tests  # run within the test directory to test the install
          pytest -v --cov ansys.tools.example_coverage --cov-report html
    
      - name: Build and upload to PyPI
        if: startsWith(github.ref, 'refs/tags')
        run: |
          python setup.py sdist
          python -m twine upload --skip-existing dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
